{"version":3,"sources":["App.module.sass","assets/zvuk-saljuta.mp3","serviceWorker.js","App.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","App","useEffect","Audio","audio","play","className","s","app","text","style","text__symbol","text__space","gifs","src","gif1","gif2","gif3","gif4","gif5","gif6","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"gFACAA,EAAOC,QAAU,CAAC,IAAM,iBAAiB,KAAO,kBAAkB,aAAe,0BAA0B,QAAU,qBAAqB,YAAc,yBAAyB,KAAO,kBAAkB,KAAO,kBAAkB,KAAO,kBAAkB,KAAO,kBAAkB,KAAO,kBAAkB,KAAO,kBAAkB,KAAO,oB,kBCD9UD,EAAOC,QAAU,IAA0B,0C,qICYvBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,oCCdOC,EAAM,WAIjB,OAHAC,qBAAU,WACR,IAAIC,MAAMC,KAAOC,SAChB,IAED,yBAAKC,UAAWC,IAAEC,KAChB,wBAAIF,UAAWC,IAAEE,MACf,0BAAMC,MAAO,CAAC,MAAO,GAAIJ,UAAWC,IAAEI,cAAtC,KACA,0BAAMD,MAAO,CAAC,MAAO,GAAIJ,UAAWC,IAAEI,cAAtC,KACA,0BAAMD,MAAO,CAAC,MAAO,GAAIJ,UAAWC,IAAEI,cAAtC,KACA,0BAAMD,MAAO,CAAC,MAAO,GAAIJ,UAAWC,IAAEI,cAAtC,KACA,0BAAMD,MAAO,CAAC,MAAO,GAAIJ,UAAWC,IAAEI,cAAtC,KACA,0BAAML,UAAWC,IAAEK,aAAc,KACjC,0BAAMF,MAAO,CAAC,MAAO,GAAIJ,UAAWC,IAAEI,cAAtC,KACA,0BAAMD,MAAO,CAAC,MAAO,GAAIJ,UAAWC,IAAEI,cAAtC,KACA,0BAAMD,MAAO,CAAC,MAAO,GAAIJ,UAAWC,IAAEI,cAAtC,KACA,0BAAMD,MAAO,CAAC,MAAO,GAAIJ,UAAWC,IAAEI,cAAtC,KACA,0BAAMD,MAAO,CAAC,MAAO,IAAKJ,UAAWC,IAAEI,cAAvC,KACA,0BAAMD,MAAO,CAAC,MAAO,IAAKJ,UAAWC,IAAEI,cAAvC,KACA,0BAAMD,MAAO,CAAC,MAAO,IAAKJ,UAAWC,IAAEI,cAAvC,KACA,0BAAMD,MAAO,CAAC,MAAO,IAAKJ,UAAWC,IAAEI,cAAvC,MAEF,yBAAKL,UAAWC,IAAEM,MAChB,yBACEC,IAAI,iIACJR,UAAWC,IAAEQ,OAEf,yBACED,IAAI,4HACJR,UAAWC,IAAES,OAEf,yBACEF,IAAI,4HACJR,UAAWC,IAAEU,OAEf,yBACEH,IAAI,iIACJR,UAAWC,IAAEW,OAEf,yBACEJ,IAAI,4HACJR,UAAWC,IAAEY,OAEf,yBACEL,IAAI,4HACJR,UAAWC,IAAEa,UC3CvBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SFyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.2652ed96.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1e12x\",\"text\":\"App_text__2k7AX\",\"text__symbol\":\"App_text__symbol__2SLIK\",\"animate\":\"App_animate__2pXIx\",\"text__space\":\"App_text__space__35BBW\",\"gifs\":\"App_gifs__wLA2J\",\"gif1\":\"App_gif1__2oOqR\",\"gif2\":\"App_gif2__x8qgQ\",\"gif3\":\"App_gif3__1dH8G\",\"gif4\":\"App_gif4__3frSd\",\"gif5\":\"App_gif5__GB2_8\",\"gif6\":\"App_gif6__13g73\"};","module.exports = __webpack_public_path__ + \"static/media/zvuk-saljuta.1e03a0d5.mp3\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, {useEffect} from 'react';\nimport s from './App.module.sass';\nimport audio from './assets/zvuk-saljuta.mp3'\n\nexport const App = () => {\n  useEffect(() => {\n    new Audio(audio).play()\n  }, [])\n  return (\n    <div className={s.app}>\n      <h1 className={s.text}>\n        <span style={{'--i': 1}} className={s.text__symbol}>H</span>\n        <span style={{'--i': 2}} className={s.text__symbol}>A</span>\n        <span style={{'--i': 3}} className={s.text__symbol}>P</span>\n        <span style={{'--i': 4}} className={s.text__symbol}>P</span>\n        <span style={{'--i': 5}} className={s.text__symbol}>Y</span>\n        <span className={s.text__space}>{' '}</span>\n        <span style={{'--i': 6}} className={s.text__symbol}>B</span>\n        <span style={{'--i': 7}} className={s.text__symbol}>I</span>\n        <span style={{'--i': 8}} className={s.text__symbol}>R</span>\n        <span style={{'--i': 9}} className={s.text__symbol}>T</span>\n        <span style={{'--i': 10}} className={s.text__symbol}>H</span>\n        <span style={{'--i': 11}} className={s.text__symbol}>D</span>\n        <span style={{'--i': 12}} className={s.text__symbol}>A</span>\n        <span style={{'--i': 13}} className={s.text__symbol}>Y</span>\n      </h1>\n      <div className={s.gifs}>\n        <img\n          src='https://media3.giphy.com/media/toofSlHbXSfZHjxxCR/200w.webp?cid=790b76118c840d981d54954e41b9a0e3798a9d8b90e32925&rid=200w.webp'\n          className={s.gif1}\n        />\n        <img\n          src='https://media0.giphy.com/media/sIoUUXfh3W51K/200w.webp?cid=790b761196d7410ff2a394470419ea6dc19085ed588b7309&rid=200w.webp'\n          className={s.gif2}\n        />\n        <img\n          src='https://media0.giphy.com/media/sAeeVA8kfVzUY/200w.webp?cid=790b7611dc8feb3de9cec4ec79e9ebcd9577c0b7afd6b6db&rid=200w.webp'\n          className={s.gif3}\n        />\n        <img\n          src='https://media0.giphy.com/media/l0XQbzGsATrRXXmjUD/200w.webp?cid=790b76117d85cb2d60f06201d658dfda15b64bc816eb4323&rid=200w.webp'\n          className={s.gif4}\n        />\n        <img\n          src='https://media1.giphy.com/media/fiSOwmsa55BXW/200w.webp?cid=790b761145a77c4cf0fb156eaa40d3ce714ec6f1fbfab56b&rid=200w.webp'\n          className={s.gif5}\n        />\n        <img\n          src='https://media4.giphy.com/media/IVYasKwukeumA/200w.webp?cid=790b761127ccc29591cafb98b30b66d6651ec2505c337bd0&rid=200w.webp'\n          className={s.gif6}\n        />\n      </div>\n    </div>\n  );\n}\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.sass';\nimport * as serviceWorker from './serviceWorker';\nimport {App} from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}